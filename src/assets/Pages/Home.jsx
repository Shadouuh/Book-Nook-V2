import { useState, useEffect } from "react";
import "./Styles/Home.css";
import landing from "../Images/Svg/landing.svg";
import landingBook from "../Images/Common/book.jpg";
import I2 from "../Images/Svg/icon2.svg";
import { Link } from "react-router-dom";

const allGenres = [
  "Ficci√≥n",
  "Drama",
  "Aventura",
  "Ciencia ficci√≥n",
  "Fantas√≠a",
  "Rom√°ntico",
  "Terror",
  "Misterio",
  "Historia",
  "Biograf√≠a",
];

const Home = () => {
  const [books, setBooks] = useState({});
  const [selectedGenres, setSelectedGenres] = useState([]);
  const [loading, setLoading] = useState(true);

  // Selecciona aleatoriamente 3 g√©neros de la lista
  const getRandomGenres = () => {
    const shuffled = [...allGenres].sort(() => 0.5 - Math.random());
    return shuffled.slice(0, 3);
  };

  // Funci√≥n para pausar el c√≥digo durante un tiempo
  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

  const fetchBooksByGenre = async (genre) => {
    try {
      let booksFetched = [];
      let attempts = 0;
      const uniqueBooks = new Set(); // Usamos un set para evitar duplicados

      // Traducci√≥n de g√©neros de espa√±ol a ingl√©s para la API
      const genreMapping = {
        Ficci√≥n: "fiction",
        Drama: "drama",
        Aventura: "adventure",
        "Ciencia ficci√≥n": "science fiction",
        Fantas√≠a: "fantasy",
        Rom√°ntico: "romance",
        Terror: "horror",
        Misterio: "mystery",
        Historia: "history",
        Biograf√≠a: "biography",
      };

      const genreInEnglish = genreMapping[genre];

      while (booksFetched.length < 10 && attempts < 500) {
        const startIndex = Math.floor(Math.random() * 40); // Aleatorizar el √≠ndice inicial
        const response = await fetch(
          `https://www.googleapis.com/books/v1/volumes?q=subject:${genreInEnglish}&startIndex=${startIndex}&maxResults=10`
        );

        // Si la respuesta tiene un error 429 (Too Many Requests), espera un tiempo y vuelve a intentarlo
        if (response.status === 429) {
          console.log(
            "L√≠mite de solicitudes alcanzado. Esperando 5 segundos..."
          );
          await sleep(5000); // Esperar 5 segundos antes de intentar nuevamente
          continue; // Vuelve a intentar la solicitud
        }

        const data = await response.json();

        // Agregar libros al array (sin filtrar a√∫n)
        if (data.items) {
          data.items.forEach((book) => {
            const bookId = book.id; // Usamos el ID del libro para evitar duplicados
            if (!uniqueBooks.has(bookId)) {
              uniqueBooks.add(bookId);
              booksFetched.push(book);
            }
          });
        }

        attempts++;
      }

      // Devolver solo los primeros 10 libros
      return booksFetched.slice(0, 10);
    } catch (error) {
      console.error(`Error al obtener libros del g√©nero ${genre}:`, error);
      return [];
    }
  };

  useEffect(() => {
    const fetchBooks = async () => {
      setLoading(true); // Mostrar indicador de carga
      const genres = getRandomGenres();
      setSelectedGenres(genres);

      const fetchedBooks = {};
      for (let genre of genres) {
        fetchedBooks[genre] = await fetchBooksByGenre(genre);
      }
      setBooks(fetchedBooks);
      setLoading(false); // Ocultar indicador de carga
    };

    fetchBooks();
  }, []);

  return (
    <>
      <div className="start">
        <div className="left-text">
          <h1>
            ¬°Hola, <span id="violet">Amante de la Lectura!</span>
          </h1>
          <p className="text">
            Imagina caminar por pasillos llenos de historias por descubrir. Cada
            libro es un portal a un mundo nuevo, un refugio donde los sue√±os
            cobran vida. Book Nook transforma tu espacio en un rinc√≥n lleno de
            magia, donde las p√°ginas susurran secretos que solo t√∫ puedes
            conocer. ¬øEst√°s listo para encontrar el libro que cambiar√° tu vida?
          </p>
          <Link to="/Login">
            <button>
              <span>Inicia tu Aventura!</span>
            </button>
          </Link>
        </div>
        <img src={landing} alt="Landing" />
      </div>
      <div className="start" id="reverse">
        <div className="left-text">
          <h1>
            ¬°Leer es <span id="violet">Magico!</span>
          </h1>
          <p className="text">
            Leer es un viaje √∫nico hacia mundos desconocidos, personajes
            inolvidables y emociones profundas. Cada p√°gina es una aventura y
            una oportunidad para so√±ar y aprender. Inicia sesi√≥n ahora y accede
            a un universo de libros esperando cambiar tu vida. üåü ¬°Empieza tu
            aventura literaria hoy!
          </p>
          <Link to="/Login">
            <button>
              <span>Inicia tu Aventura!</span>
            </button>
          </Link>
        </div>
        <img src={landingBook} alt="Landing" />
      </div>

      {loading ? (
        <p className="loading">Cargando libros...</p>
      ) : (
        <div className="genre-sections">
          {selectedGenres.map((genre) => (
            <div key={genre} className="genre-section">
              <h2>
                <span id="violet">{genre}</span>
              </h2>
              <div className="books-container">
                {books[genre]?.length > 0 ? (
                  books[genre].map((book, index) => (
                    <div key={index} className="product-card">
                      {/* Imagen del libro */}
                      <img
                        src={
                          book.volumeInfo.imageLinks?.thumbnail ||
                          "default_image_url.jpg"
                        }
                        alt={book.volumeInfo.title}
                      />
                      {/* Informaci√≥n del libro */}
                      <div className="product-card-info">
                        <h4>{book.volumeInfo.title}</h4>
                        <p>
                          {book.volumeInfo.authors
                            ? book.volumeInfo.authors.join(", ")
                            : "Autor desconocido"}
                        </p>
                        <p className="price">
                          {book.saleInfo?.listPrice
                            ? `$${book.saleInfo.listPrice.amount} USD`
                            : "Precio no disponible"}
                        </p>
                        <Link to="/Catalog">
                          <p className="show-btn">Ver mas</p>
                        </Link>
                      </div>
                    </div>
                  ))
                ) : (
                  <p>
                    Parece haber baja se√±al, Los libros se estan escondiendo :c.
                  </p>
                )}
              </div>
            </div>
          ))}
        </div>
      )}

      <div className="start">
        <div className="left-text">
          <h1>¬°Prueba nuestro cafe 5 Estrellas!</h1>
          <p className="text"
        >
            Conoce a <span id="violetSmall">Teresita {"<3"},</span> quien est√°
            disfrutando nuestro nuevo Bubble Tea en la acogedora atm√≥sfera de
            nuestra cafeter√≠a en Banfield. ¬°√önete a ella y vive la experiencia!
            Aprovecha un 5% de descuento con nuestro cup√≥n especial. Haz clic en
            el bot√≥n y vis√≠tanos hoy mismo.
          </p>
          <Link to="/Discount/Coupon">
            <button>
              <span>Obtener Cupon!</span>
            </button>
          </Link>
        </div>
        <img src={I2} alt="Landing" />
      </div>
    </>
  );
};

export default Home;
